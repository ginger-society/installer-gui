apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-binaries-and-upload-to-bucket
  namespace: tasks-ginger-installer
  annotations:
    x-ginger-task-namespace: "ginger-installer"  # Custom annotation
    x-ginger-task-trigger-branch: '["refs/heads/master"]'  # Allowed branches

spec:
  workspaces:
      - name: source
      - name: ssh-credentials  # Store SSH keys
      - name: ssh-config  # Store SSH setup
      - name: kubeconfig
  steps:
    - name: clone
      image: alpine
      script: |
        #!/bin/sh
        set -e  # Exit on error

        echo "Started"

        apk add --no-cache openssh-client git wget jq # Install SSH tools
        apk add util-linux
        # Install kubectl using wget
        wget -qO /usr/local/bin/kubectl "https://dl.k8s.io/release/$(wget -qO- https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
        chmod +x /usr/local/bin/kubectl

        mkdir -p /workspace/ssh-config/.ssh
        cp /workspace/ssh-credentials/id_ed25519 /workspace/ssh-config/.ssh/id_ed25519
        chmod 600 /workspace/ssh-config/.ssh/id_ed25519

        # Configure SSH to disable strict host key checking
        echo "Host source.gingersociety.org" >> /workspace/ssh-config/.ssh/config
        echo "    User git" >> /workspace/ssh-config/.ssh/config
        echo "    HostName source.gingersociety.org" >> /workspace/ssh-config/.ssh/config
        echo "    Port 3333" >> /workspace/ssh-config/.ssh/config
        echo "    IdentityFile ~/.ssh/id_ed25519" >> /workspace/ssh-config/.ssh/config
        echo "    StrictHostKeyChecking no" >> /workspace/ssh-config/.ssh/config
        echo "    UserKnownHostsFile=/dev/null" >> /workspace/ssh-config/.ssh/config

        # Add host to known_hosts (to prevent manual intervention)
        ssh-keyscan -p 3333 -H source.gingersociety.org > /workspace/ssh-config/.ssh/known_hosts

        # Ensure SSH config is applied
        chmod 600 /workspace/ssh-config/.ssh/config
        chmod 644 /workspace/ssh-config/.ssh/known_hosts

        echo "SSH setup completed successfully."
        less /workspace/ssh-config/.ssh/id_ed25519
        cp -r /workspace/ssh-config/.ssh ~/

        git clone git@source.gingersociety.org:ginger-installer /workspace/source/ginger-installer
        echo "Repository cloned successfully."
        
    - name: build
      image: alpine
      script: |
        #!/bin/sh
        set -e  # Exit on error
        cd /workspace/source/ginger-installer
        ls -la .
        cat Dockerfile


